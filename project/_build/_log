### Starting build.
# Target: main.mli.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules main.mli > main.mli.depends # cached
# Target: main.cmi, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o main.cmi main.mli # cached
# Target: main.ml.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules main.ml > main.ml.depends # cached
# Target: ai.mli.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:ai.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules ai.mli > ai.mli.depends # cached
# Target: data.mli.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:data.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules data.mli > data.mli.depends # cached
# Target: data.cmi, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:data.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o data.cmi data.mli # cached
# Target: ai.cmi, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:ai.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o ai.cmi ai.mli # cached
# Target: board.mli.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:board.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules board.mli > board.mli.depends # cached
# Target: board.cmi, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:board.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o board.cmi board.mli # cached
# Target: command.mli.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules command.mli > command.mli.depends # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o command.cmi command.mli # cached
# Target: gui.mli.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules gui.mli > gui.mli.depends # cached
# Target: gui.cmi, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o gui.cmi gui.mli # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o main.cmo main.ml # cached
# Target: ai.ml.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:ai.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules ai.ml > ai.ml.depends # cached
# Target: ai.cmo, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:ai.cmo, file:ai.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o ai.cmo ai.ml # cached
# Target: board.ml.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:board.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules board.ml > board.ml.depends # cached
# Target: board.cmo, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:board.cmo, file:board.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o board.cmo board.ml # cached
# Target: command.ml.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules command.ml > command.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o command.cmo command.ml # cached
# Target: data.ml.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:data.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules data.ml > data.ml.depends # cached
# Target: data.cmo, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:data.cmo, file:data.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o data.cmo data.ml # cached
# Target: gui.ml.depends, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -modules gui.ml > gui.ml.depends
# Target: gui.cmo, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, compile, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics -o gui.cmo gui.ml
# Target: main.byte, tags: { package(ANSITerminal), package(Graphics), package(oUnit), package(qcheck), package(str), package(unix), byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package unix -package oUnit -package qcheck -package str -package ANSITerminal -package Graphics command.cmo data.cmo board.cmo ai.cmo gui.cmo main.cmo -o main.byte
# Compilation successful.
